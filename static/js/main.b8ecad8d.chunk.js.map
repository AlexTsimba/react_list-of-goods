{"version":3,"sources":["App.tsx","components/ListOfGoods/ListOfgoods.tsx","index.tsx"],"names":["SortType","ListOfGoods","goods","this","props","map","good","PureComponent","goodsFromServer","App","state","sortType","NONE","isReversed","sortByALPH","setState","ALPABET","sortByLength","LENGTH","reverse","reset","isOrderChanged","reorderedGoods","visibleGoods","sort","prev","cur","localeCompare","length","Error","console","log","getReorderedGoods","className","type","classNames","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAoBKA,E,+FCdQC,EAAb,4JACE,WACE,IAAQC,EAAUC,KAAKC,MAAfF,MAER,OACE,6BACGA,EAAMG,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YARjB,GAAiCC,iBDCpBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGR,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAkDE,IAAMS,EAAb,4MACEC,MAAQ,CACNC,SAAUX,EAASY,KACnBC,YAAY,GAHhB,EAMEC,WAAa,WACX,EAAKC,SAAS,CAAEJ,SAAUX,EAASgB,WAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEJ,SAAUX,EAASkB,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBAhBzB,EAoBEO,MAAQ,WACN,EAAKL,SAAS,CACZJ,SAAUX,EAASY,KACnBC,YAAY,KAvBlB,4CA2BE,WACE,MAGIV,KAAKO,MAFPC,EADF,EACEA,SACAE,EAFF,EAEEA,WAGIQ,GAA2C,IAA1BlB,KAAKO,MAAMG,YAC7BV,KAAKO,MAAMC,WAAaX,EAASY,KAEhCU,EA1EH,SACLpB,EADK,GAGJ,IADCS,EACF,EADEA,SAAUE,EACZ,EADYA,WAGNU,EAAY,YAAOrB,GAGzB,OAAQS,GACN,KAAKX,EAASgB,QACZO,EAAaC,MAAK,SAACC,EAAMC,GAAP,OAAeD,EAAKE,cAAcD,MACpD,MAEF,KAAK1B,EAASkB,OACZK,EAAaC,MAAK,SAACC,EAAMC,GAAP,OAAeD,EAAKG,OAASF,EAAIE,UACnD,MAEF,KAAK5B,EAASY,KACZ,MAEF,QACE,MAAM,IAAIiB,MAAM,6BAMpB,OAFAC,QAAQC,IAAIpB,EAAUE,GAEfA,EACHU,EAAaJ,UACbI,EA6CqBS,CACrBxB,EACAL,KAAKO,OAGP,OACE,sBAAKuB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYxB,IAAaX,EAASgB,UAEtCoB,QAASjC,KAAKW,WAPhB,iCAYA,wBACEoB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYxB,IAAaX,EAASkB,SAEtCkB,QAASjC,KAAKc,aAPhB,4BAYA,wBACEiB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAA2B,IAAftB,IAEhBuB,QAASjC,KAAKgB,QAPhB,qBAYCE,GAEG,wBACEa,KAAK,SACLD,UAAWE,IACT,SACA,aAEFC,QAASjC,KAAKiB,MANhB,sBAYN,cAAC,EAAD,CAAalB,MAAOoB,WA9F5B,GAAyBe,aEnEzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b8ecad8d.chunk.js","sourcesContent":["// import React from 'react';\nimport classNames from 'classnames';\nimport { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { ListOfGoods } from './components/ListOfGoods/ListOfgoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((prev, cur) => prev.localeCompare(cur));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((prev, cur) => prev.length - cur.length);\n      break;\n\n    case SortType.NONE:\n      break;\n\n    default:\n      throw new Error('Error! Check sortBy param');\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  sortByALPH = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const {\n      sortType,\n      isReversed,\n    } = this.state;\n\n    const isOrderChanged = this.state.isReversed === true\n      || this.state.sortType !== SortType.NONE;\n\n    const reorderedGoods = getReorderedGoods(\n      goodsFromServer,\n      this.state,\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPABET },\n            )}\n            onClick={this.sortByALPH}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': isReversed !== true },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {isOrderChanged\n            && (\n              <button\n                type=\"button\"\n                className={classNames(\n                  'button',\n                  'is-danger',\n                )}\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n        <ListOfGoods goods={reorderedGoods} />\n      </div>\n    );\n  }\n}\n","import { PureComponent } from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport class ListOfGoods extends PureComponent<Props, {}> {\n  render() {\n    const { goods } = this.props;\n\n    return (\n      <ul>\n        {goods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}